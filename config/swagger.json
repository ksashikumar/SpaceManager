{
  "swagger": "2.0",
  "info": {
    "description": "Space Manager is a management solution for short term leasing or retail spaces",
    "version": "1.0.0",
    "title": "SpaceManager"
  },
  "host": "space-manager-api.herokuapp.com",
  "tags": [
    {
      "name": "Store",
      "description": "Operations about Stores"
    },
    {
      "name": "Space",
      "description": "Operations about Spaces"
    }
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/spaces": {
      "post": {
        "tags": [
          "Space"
        ],
        "summary": "Add a new space",
        "description": "",
        "operationId": "addSpace",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Space object that needs to be added",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Space"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Associated store not found"
          }
        }
      },
      "get": {
        "tags": [
          "Space"
        ],
        "summary": "List Spaces based on filter query parameters",
        "description": "Returns list of Spaces",
        "operationId": "getSpaceList",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Space"
              }
            }
          },
          "404": {
            "description": "Space not found"
          }
        }
      }
    },
    "/spaces/{spaceId}": {
      "put": {
        "tags": [
          "Space"
        ],
        "summary": "Update an existing space",
        "description": "",
        "operationId": "updateSpace",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "spaceId",
            "in": "path",
            "description": "ID of space to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Space object that needs to be added",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Space"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid parameters supplied"
          },
          "404": {
            "description": "Space/Store not found"
          }
        }
      },
      "get": {
        "tags": [
          "Space"
        ],
        "summary": "Find space by ID",
        "description": "Returns a single space",
        "operationId": "getSpaceById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "spaceId",
            "in": "path",
            "description": "ID of space to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Space"
            }
          },
          "404": {
            "description": "Space not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Space"
        ],
        "summary": "Deletes a space",
        "description": "",
        "operationId": "deleteSpace",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "spaceId",
            "in": "path",
            "description": "Space id to delete",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "404": {
            "description": "Space not found"
          }
        }
      }
    },
    "/spaces/{spaceId}/price/{startDate}/{endDate}": {
      "get": {
        "tags": [
          "Space"
        ],
        "summary": "Find price quote of given space",
        "description": "Returns price for the given period",
        "operationId": "getPriceQuote",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "spaceId",
            "in": "path",
            "description": "ID of space to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "startDate",
            "in": "path",
            "description": "start date to calculate quote price",
            "required": true,
            "type": "string",
            "format": "date"
          },
          {
            "name": "endDate",
            "in": "path",
            "description": "end date to calculate quote price",
            "required": true,
            "type": "string",
            "format": "date"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "price_quote": {
                  "type": "integer",
                  "format": "float",
                  "description": "The quoted price"
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters"
          },
          "404": {
            "description": "Space not found"
          }
        }
      }
    },
    "/stores": {
      "post": {
        "tags": [
          "Store"
        ],
        "summary": "Add a new store",
        "description": "",
        "operationId": "addStore",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Store object that needs to be added",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Store"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "Store not found"
          }
        }
      },
      "get": {
        "tags": [
          "Store"
        ],
        "summary": "List Stores based on filter query parameters",
        "description": "Returns list of Stores",
        "operationId": "getStoresList",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Store"
              }
            }
          },
          "404": {
            "description": "Store not found"
          }
        }
      }
    },
    "/stores/{storeId}": {
      "put": {
        "tags": [
          "Store"
        ],
        "summary": "Update an existing store",
        "description": "",
        "operationId": "updateStore",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "storeId",
            "in": "path",
            "description": "ID of store to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Store object that needs to be added",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Store"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid parameters supplied"
          },
          "404": {
            "description": "Store not found"
          }
        }
      },
      "get": {
        "tags": [
          "Store"
        ],
        "summary": "Find store by ID",
        "description": "Returns a single store",
        "operationId": "getStoreById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "storeId",
            "in": "path",
            "description": "ID of store to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Store"
            }
          },
          "404": {
            "description": "Store not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Store"
        ],
        "summary": "Deletes a store",
        "description": "",
        "operationId": "deleteStore",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "storeId",
            "in": "path",
            "description": "Store id to delete",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "404": {
            "description": "Store not found"
          }
        }
      }
    }
  },
  "definitions": {
    "Space": {
      "type": "object",
      "required": [
        "title"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "title": {
          "type": "string",
          "format": "byte"
        },
        "size": {
          "type": "number",
          "format": "float"
        },
        "price_per_day": {
          "type": "number",
          "format": "float"
        },
        "price_per_week": {
          "type": "number",
          "format": "float"
        },
        "price_per_month": {
          "type": "number",
          "format": "float"
        },
        "store_id": {
          "type": "integer",
          "format": "int64"
        }
      },
      "xml": {
        "name": "Space"
      }
    },
    "Store": {
      "type": "object",
      "required": [
        "title"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "title": {
          "type": "string",
          "format": "byte"
        },
        "city": {
          "type": "string",
          "format": "byte"
        },
        "street": {
          "type": "string",
          "format": "byte"
        },
        "spaces_count": {
          "type": "integer",
          "format": "int64"
        }
      },
      "xml": {
        "name": "Store"
      }
    }
  }
}